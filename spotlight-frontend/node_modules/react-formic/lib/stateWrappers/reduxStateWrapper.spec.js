'use strict';

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _immutable = require('immutable');

var _chaiImmutable = require('chai-immutable');

var _chaiImmutable2 = _interopRequireDefault(_chaiImmutable);

var _purdy = require('purdy');

var _purdy2 = _interopRequireDefault(_purdy);

var _stateTypes = require('../data/stateTypes');

var _reduxPersistenceWrapper = require('./reduxPersistenceWrapper');

var _validity = require('../constants/validity');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_chai2.default.use(_chaiImmutable2.default);

var stateEmpty = new _stateTypes.Formic();
var statePopulated = new _stateTypes.Formic({
  forms: (0, _immutable.Map)({
    signUp: (0, _stateTypes.Form)({
      fields: (0, _immutable.Map)({
        firstName: new _stateTypes.Field({
          isRequired: true,
          value: 'Anakin'
        })
      })
    }),
    search: (0, _stateTypes.Form)({
      fields: (0, _immutable.Map)({
        queryString: new _stateTypes.Field({
          value: 'new lightsabres'
        })
      })
    })
  })
});

describe('reduxPersistenceWrapper', function () {
  describe('DELETE_FORM', function () {
    it('should delete the form with the specified name', function () {
      var action = {
        type: _reduxPersistenceWrapper.DELETE_FORM,
        payload: {
          formName: 'signUp'
        }
      };
      var newState = (0, _reduxPersistenceWrapper.formicReducer)(statePopulated, action);
      (0, _chai.expect)(newState.getIn(['forms', action.payload.formName])).to.equal(action.payload.form);
    });
  });

  describe('INITIALIZE_FORM', function () {
    it('should create a form with the specified name', function () {
      var action = {
        type: _reduxPersistenceWrapper.INITIALIZE_FORM,
        payload: {
          form: (0, _stateTypes.Form)({
            fields: (0, _immutable.Map)({
              firstName: (0, _stateTypes.Field)({
                value: 'Anakin'
              })
            })
          }),
          formName: 'signUp'
        }
      };
      var newState = (0, _reduxPersistenceWrapper.formicReducer)(stateEmpty, action);
      (0, _chai.expect)(newState.getIn(['forms', action.payload.formName])).to.equal(action.payload.form);
    });
  });

  describe('SET_FORM_FIELD', function () {
    it('should replace field', function () {
      var action = {
        type: _reduxPersistenceWrapper.SET_FORM_FIELD,
        payload: {
          formName: 'signUp',
          field: {
            value: 'Darth'
          },
          fieldName: 'firstName',
          shouldReplace: true
        }
      };

      var newState = (0, _reduxPersistenceWrapper.formicReducer)(statePopulated, action);
      var expectedState = statePopulated.setIn(['forms', 'signUp', 'fields', 'firstName', 'value'], action.payload.field.value).setIn(['forms', 'signUp', 'fields', 'firstName', 'isRequired'], false);
      (0, _chai.expect)(newState).to.deep.equal(expectedState);
    });

    it('should merge into field', function () {
      var action = {
        type: _reduxPersistenceWrapper.SET_FORM_FIELD,
        payload: {
          formName: 'signUp',
          field: {
            validity: 'valid'
          },
          fieldName: 'firstName',
          shouldReplace: false
        }
      };

      var newState = (0, _reduxPersistenceWrapper.formicReducer)(statePopulated, action);
      var expectedState = statePopulated.setIn(['forms', 'signUp', 'fields', 'firstName', 'validity'], action.payload.field.validity);

      (0, _chai.expect)(newState).to.deep.equal(expectedState);
    });
  });

  describe('SET_FORM_FIELDS', function () {
    it('should set previously undefined field value', function () {
      var action = {
        type: _reduxPersistenceWrapper.SET_FORM_FIELDS,
        payload: {
          formName: 'signUp',
          fields: {
            firstName: {
              validity: _validity.VALID
            }
          }
        }
      };

      var newState = (0, _reduxPersistenceWrapper.formicReducer)(statePopulated, action);
      var expectedState = statePopulated.setIn(['forms', 'signUp', 'fields', 'firstName', 'validity'], action.payload.fields.firstName.validity);
      (0, _chai.expect)(newState).to.deep.equal(expectedState);
    });

    it('should set previously defined field value', function () {
      var action = {
        type: _reduxPersistenceWrapper.SET_FORM_FIELDS,
        payload: {
          formName: 'signUp',
          fields: {
            firstName: {
              value: 'Darth'
            }
          }
        }
      };

      var newState = (0, _reduxPersistenceWrapper.formicReducer)(statePopulated, action);
      var expectedState = statePopulated.setIn(['forms', 'signUp', 'fields', 'firstName', 'value'], action.payload.fields.firstName.value);
      (0, _chai.expect)(newState).to.deep.equal(expectedState);
    });
  });
});
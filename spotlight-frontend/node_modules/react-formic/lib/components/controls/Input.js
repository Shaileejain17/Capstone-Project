'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _connectField = require('../connectors/connectField');

var _connectField2 = _interopRequireDefault(_connectField);

var _checkboxStates = require('../../constants/checkboxStates');

var _controlUtils = require('../../utils/controlUtils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Input = function Input(props) {
  var className = props.className;
  var type = props.type;
  var value = props.value;
  var field = props.field;
  var _onChange = props.onChange;


  var proxyProps = _extends({}, props, {
    className: (0, _classnames2.default)(className, (0, _controlUtils.getValidityClassNames)(field)),
    onChange: function onChange(event) {
      switch (type) {
        case 'radio':
          _onChange(value);
          break;
        case 'checkbox':
          _onChange(event.target.checked ? _checkboxStates.CHECKED : _checkboxStates.UNCHECKED);
          break;
        default:
          _onChange(event.target.value);
      }
    }
  });

  switch (type) {
    case 'radio':
      proxyProps.checked = field.value === value;
      break;

    case 'checkbox':
      proxyProps.checked = field.value === _checkboxStates.CHECKED;
      break;

    default:
      // Value defaults to an empty string to avoid an uncontrolled to controlled input warning.
      // See documentation: http://facebook.github.io/react/docs/forms.html#controlled-components
      proxyProps.value = field.value || '';
  }

  return _react2.default.createElement('input', proxyProps);
};

Input.propTypes = {
  className: _react2.default.PropTypes.string,
  field: _react2.default.PropTypes.object.isRequired,
  onChange: _react2.default.PropTypes.func.isRequired,
  type: _react2.default.PropTypes.string.isRequired,
  value: _react2.default.PropTypes.string
};

Input.defaultProps = {
  field: require('immutable').Map
};

exports.default = (0, _connectField2.default)()(Input);
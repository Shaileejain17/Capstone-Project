{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sj11477\\\\ReactJD\\\\spotlight\\\\spotlight\\\\src\\\\Components\\\\Dashboard.js\";\nimport React, { Component } from 'react';\nimport CreateForm from './CreateForm';\nimport { Button, Image } from \"react-bootstrap\";\nimport Checkbox from \"./CheckBox\";\nconst apiBase = 'http://localhost:8081/';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleCheckbox = label => {\n      const {\n        selectedCheckboxes\n      } = this.state;\n\n      if (selectedCheckboxes.has(label)) {\n        selectedCheckboxes.delete(label);\n      } else {\n        selectedCheckboxes.add(label);\n      }\n    };\n\n    this.deleteSelectedRows = () => {\n      const {\n        selectedCheckboxes\n      } = this.state;\n      console.log('selectedCheckboxes', JSON.stringify(Array.from(selectedCheckboxes)));\n      fetch(`${apiBase}multiple_delete`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(Array.from(selectedCheckboxes))\n      }).then(() => {\n        this.setState({\n          isDeleteButtonClicked: true\n        });\n        this.fetchAllRows();\n      });\n    };\n\n    this.updateSelectedRow = id => {\n      this.setState({\n        isUpdate: true,\n        showCreatForm: true\n      });\n      const data = this.state.Items.find(obj => obj.id === id);\n      this.setState({\n        initialValues: {\n          id: id,\n          title: data.title,\n          country: data.country,\n          language: data.language,\n          keyword: data.keyword,\n          description: data.description,\n          startDate: data.startDate,\n          endDate: data.endDate,\n          productImage: data.productImage\n        }\n      });\n    };\n\n    this.handleSubmit = formData => {\n      if (this.state.isUpdate) {\n        fetch(`${apiBase}update_data`, {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        }).then(() => {\n          this.setState({\n            showCreatForm: false,\n            isUpdate: false\n          });\n          this.fetchAllRows();\n        });\n      } else {\n        fetch(`${apiBase}insert_data`, {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        }).then(() => {\n          this.setState({\n            showCreatForm: false\n          });\n          this.fetchAllRows();\n        });\n      }\n    };\n\n    this.closeCreateForm = () => this.setState({\n      showCreatForm: false\n    });\n\n    this.state = {\n      isUpdate: false,\n      showCreatForm: false,\n      selectedCheckboxes: new Set(),\n      isDeleteButtonClicked: false,\n      Items: [],\n      initialValues: {\n        title: '',\n        country: '',\n        language: '',\n        keyword: '',\n        description: '',\n        startDate: '',\n        endDate: '',\n        productImage: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAllRows();\n  }\n\n  fetchAllRows() {\n    fetch(`${apiBase}Spotlight_Details`, {\n      method: 'get'\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        Items: data,\n        isDeleteButtonClicked: false\n      });\n    }).catch(err => console.log('err', err));\n  }\n\n  render() {\n    const {\n      isUpdate,\n      Items,\n      isDeleteButtonClicked\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navbar navbar-light bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"navbar-brand\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, \"Spotlight\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success my-2 my-sm-0\",\n      onClick: () => this.setState({\n        showCreatForm: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, \"Create\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-danger my-2 my-sm-0\",\n      disabled: isDeleteButtonClicked,\n      onClick: this.deleteSelectedRows,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \"Delete\")), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }, \"Discription\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, \"Product Image\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, \"Delete\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, Items.map(data => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }, data.title), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }\n    }, data.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }, data.country), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: data.productImage,\n      style: {\n        height: 50,\n        width: 100\n      },\n      rounded: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.updateSelectedRow(data.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 37\n      }\n    }, \"Update\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: data.id,\n      handleCheckboxChange: this.toggleCheckbox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 37\n      }\n    })))))), /*#__PURE__*/React.createElement(CreateForm, {\n      show: this.state.showCreatForm,\n      onHide: () => this.closeCreateForm(),\n      initialValues: this.state.initialValues,\n      isUpdate: isUpdate,\n      handleSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/sj11477/ReactJD/spotlight/spotlight/src/Components/Dashboard.js"],"names":["React","Component","CreateForm","Button","Image","Checkbox","apiBase","Dashboard","constructor","props","toggleCheckbox","label","selectedCheckboxes","state","has","delete","add","deleteSelectedRows","console","log","JSON","stringify","Array","from","fetch","method","headers","body","then","setState","isDeleteButtonClicked","fetchAllRows","updateSelectedRow","id","isUpdate","showCreatForm","data","Items","find","obj","initialValues","title","country","language","keyword","description","startDate","endDate","productImage","handleSubmit","formData","closeCreateForm","Set","componentDidMount","response","json","catch","err","render","map","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport CreateForm from './CreateForm';\r\nimport { Button, Image } from \"react-bootstrap\";\r\nimport Checkbox from \"./CheckBox\";\r\n\r\nconst apiBase = 'http://localhost:8081/'\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isUpdate: false,\r\n            showCreatForm: false,\r\n            selectedCheckboxes: new Set(),\r\n            isDeleteButtonClicked: false,\r\n            Items: [],\r\n            initialValues: {\r\n                title: '',\r\n                country: '',\r\n                language: '',\r\n                keyword: '',\r\n                description: '',\r\n                startDate: '',\r\n                endDate: '',\r\n                productImage: ''\r\n            }\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.fetchAllRows();\r\n    }\r\n    fetchAllRows(){\r\n        fetch(`${apiBase}Spotlight_Details`, {\r\n            method: 'get'\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ Items: data,isDeleteButtonClicked : false })\r\n            })\r\n            .catch(err => console.log('err', err))\r\n    }\r\n\r\n    toggleCheckbox = label => {\r\n        const { selectedCheckboxes } = this.state;\r\n        if (selectedCheckboxes.has(label)) {\r\n            selectedCheckboxes.delete(label);\r\n        } else {\r\n            selectedCheckboxes.add(label);\r\n        }\r\n    }\r\n    deleteSelectedRows = () => {\r\n        const { selectedCheckboxes } = this.state;\r\n        console.log('selectedCheckboxes', JSON.stringify(Array.from(selectedCheckboxes)));\r\n        fetch(`${apiBase}multiple_delete`, {\r\n            method: 'post',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(Array.from(selectedCheckboxes))\r\n        }).then(()=>{\r\n            this.setState({isDeleteButtonClicked : true});\r\n            this.fetchAllRows();\r\n        })\r\n    } \r\n\r\n    updateSelectedRow = (id) => {\r\n        this.setState({ isUpdate: true, showCreatForm: true });\r\n        const data = this.state.Items.find((obj) => obj.id === id);\r\n        this.setState({\r\n            initialValues: {\r\n                id:id,\r\n                title: data.title,\r\n                country: data.country,\r\n                language: data.language,\r\n                keyword: data.keyword,\r\n                description: data.description,\r\n                startDate:data.startDate,\r\n                endDate: data.endDate,\r\n                productImage: data.productImage\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSubmit = (formData) => {\r\n        if(this.state.isUpdate){\r\n            fetch(`${apiBase}update_data`,{\r\n                method:'put',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(formData)\r\n            }).then(() => {\r\n                this.setState({showCreatForm : false, isUpdate : false});\r\n                this.fetchAllRows();\r\n            })\r\n        }else{\r\n        fetch(`${apiBase}insert_data`, {\r\n            method: 'post',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(formData)\r\n        }).then(() => {\r\n           this.setState({showCreatForm : false});\r\n           this.fetchAllRows();\r\n        })\r\n    }\r\n    }\r\n\r\n    closeCreateForm = () => this.setState({ showCreatForm: false });\r\n    render() {\r\n        const { isUpdate, Items, isDeleteButtonClicked } = this.state;\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-light bg-light\">\r\n                    <a className=\"navbar-brand\" href=\"#\">Spotlight</a>\r\n\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\"\r\n                        onClick={() => this.setState({ showCreatForm: true })}>Create</button>\r\n                    <button className=\"btn btn-outline-danger my-2 my-sm-0\" disabled={isDeleteButtonClicked}\r\n                        onClick={this.deleteSelectedRows}>Delete</button>\r\n                </nav>\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th scope=\"col\">Title</th>\r\n                            <th scope=\"col\">Discription</th>\r\n                            <th scope=\"col\">Country</th>\r\n                            <th scope=\"col\">Product Image</th>\r\n                            <th scope=\"col\">Update</th>\r\n                            <th scope=\"col\">Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {Items.map((data) => (\r\n                            <tr>\r\n                                <td>\r\n                                    {data.title}\r\n                                </td>\r\n                                <td>\r\n                                    {data.description}\r\n                                </td>\r\n                                <td>\r\n                                    {data.country}\r\n                                </td>\r\n                                <td>\r\n                                    <Image src={data.productImage} style={{ height: 50, width: 100 }} rounded />\r\n                                </td>\r\n                                <td>\r\n                                    <Button variant=\"primary\" onClick={(() => this.updateSelectedRow(data.id))}>Update</Button>\r\n                                </td>\r\n                                <td>\r\n                                    <Checkbox\r\n                                        label={data.id}\r\n                                        handleCheckboxChange={this.toggleCheckbox}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n                <CreateForm\r\n                    show={this.state.showCreatForm}\r\n                    onHide={() => this.closeCreateForm()}\r\n                    initialValues={this.state.initialValues}\r\n                    isUpdate={isUpdate}\r\n                    handleSubmit={this.handleSubmit}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Dashboard;\r\n\r\n"]},"metadata":{},"sourceType":"module"}